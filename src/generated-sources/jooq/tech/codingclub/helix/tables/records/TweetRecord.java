/*
 * This file is generated by jOOQ.
*/
package tech.codingclub.helix.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import tech.codingclub.helix.tables.Tweet;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TweetRecord extends UpdatableRecordImpl<TweetRecord> implements Record4<String, Long, Timestamp, Long> {

    private static final long serialVersionUID = -943723549;

    /**
     * Setter for <code>twitter.tweet.message</code>.
     */
    public void setMessage(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>twitter.tweet.message</code>.
     */
    public String getMessage() {
        return (String) get(0);
    }

    /**
     * Setter for <code>twitter.tweet.id</code>.
     */
    public void setId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>twitter.tweet.id</code>.
     */
    public Long getId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>twitter.tweet.created_at</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>twitter.tweet.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>twitter.tweet.author_id</code>.
     */
    public void setAuthorId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>twitter.tweet.author_id</code>.
     */
    public Long getAuthorId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, Long, Timestamp, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, Long, Timestamp, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Tweet.TWEET.MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Tweet.TWEET.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Tweet.TWEET.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Tweet.TWEET.AUTHOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getAuthorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getAuthorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TweetRecord value1(String value) {
        setMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TweetRecord value2(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TweetRecord value3(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TweetRecord value4(Long value) {
        setAuthorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TweetRecord values(String value1, Long value2, Timestamp value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TweetRecord
     */
    public TweetRecord() {
        super(Tweet.TWEET);
    }

    /**
     * Create a detached, initialised TweetRecord
     */
    public TweetRecord(String message, Long id, Timestamp createdAt, Long authorId) {
        super(Tweet.TWEET);

        set(0, message);
        set(1, id);
        set(2, createdAt);
        set(3, authorId);
    }
}
