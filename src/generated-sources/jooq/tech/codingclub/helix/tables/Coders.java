/*
 * This file is generated by jOOQ.
*/
package tech.codingclub.helix.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tech.codingclub.helix.Twitter;
import tech.codingclub.helix.tables.records.CodersRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Coders extends TableImpl<CodersRecord> {

    private static final long serialVersionUID = -1558171498;

    /**
     * The reference instance of <code>twitter.coders</code>
     */
    public static final Coders CODERS = new Coders();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CodersRecord> getRecordType() {
        return CodersRecord.class;
    }

    /**
     * The column <code>twitter.coders.age</code>.
     */
    public final TableField<CodersRecord, Long> AGE = createField("age", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>twitter.coders.name</code>.
     */
    public final TableField<CodersRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * Create a <code>twitter.coders</code> table reference
     */
    public Coders() {
        this(DSL.name("coders"), null);
    }

    /**
     * Create an aliased <code>twitter.coders</code> table reference
     */
    public Coders(String alias) {
        this(DSL.name(alias), CODERS);
    }

    /**
     * Create an aliased <code>twitter.coders</code> table reference
     */
    public Coders(Name alias) {
        this(alias, CODERS);
    }

    private Coders(Name alias, Table<CodersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Coders(Name alias, Table<CodersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Twitter.TWITTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Coders as(String alias) {
        return new Coders(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Coders as(Name alias) {
        return new Coders(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Coders rename(String name) {
        return new Coders(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Coders rename(Name name) {
        return new Coders(name, null);
    }
}
